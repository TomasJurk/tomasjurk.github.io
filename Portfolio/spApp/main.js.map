{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/data.service.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.scss","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/how-to/how-to.component.html","webpack:///./src/app/how-to/how-to.component.scss","webpack:///./src/app/how-to/how-to.component.ts","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.scss","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { HowToComponent } from './how-to/how-to.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'how-to', component: HowToComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n// MODULES\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\n\n// SERVICES\nimport { DataService } from './core/data.service';\n\n// COMPONENTS\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HowToComponent } from './how-to/how-to.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavbarComponent,\n    FooterComponent,\n    HowToComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private githubApiUrl = 'https://api.github.com/';\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getData(request) {\n    return this.http.get(this.githubApiUrl + request);\n  }\n}\n","module.exports = \"<footer>\\n  <a href=\\\"https://github.com/\\\" target=\\\"_blank\\\">\\n    <img class=\\\"footer-logo\\\" src=\\\"../../assets/GitHub-Logo.png\\\" alt=\\\"\\\">\\n  </a>\\n  <span class=\\\"spacer\\\"></span>\\n  <div class=\\\"social-links\\\">\\n    <a href=\\\"https://www.facebook.com/GitHub/\\\" target=\\\"_blank\\\">\\n      <i class=\\\"fab fa-facebook\\\"></i>\\n    </a>\\n    <a href=\\\"https://twitter.com/github\\\" target=\\\"_blank\\\">\\n      <i class=\\\"fab fa-twitter-square\\\"></i>\\n    </a>\\n    <a href=\\\"https://www.instagram.com/github/?hl=en\\\" target=\\\"_blank\\\">\\n      <i class=\\\"fab fa-instagram\\\"></i>\\n    </a>\\n  </div>\\n</footer>\\n\"","module.exports = \"footer {\\n  width: 100%;\\n  background-color: #b0f5f5;\\n  padding: 0.75rem 1.5rem;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  height: 5rem; }\\n  footer .footer-logo {\\n    height: 2rem; }\\n  footer .social-links i {\\n    font-size: 2rem;\\n    color: #222222;\\n    margin-left: 1rem; }\\n  footer .social-links i:hover {\\n    color: #003dc0; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\r\\n\\r\\n  <!-- SEARCH CONTAINER -->\\r\\n  <div class=\\\"search\\\">\\r\\n    <div class=\\\"checkbox-container\\\">\\r\\n      <label class=\\\"chearch-type\\\">\\r\\n        <input type=\\\"radio\\\" checked=\\\"checked\\\" name=\\\"radio\\\" (click)=\\\"switchToUserSearch()\\\"> Get user information\\r\\n      </label>\\r\\n      <label class=\\\"chearch-type\\\">\\r\\n        <input type=\\\"radio\\\" name=\\\"radio\\\" (click)=\\\"switchToRepoSearch()\\\"> Search for repositories\\r\\n      </label>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"search-box\\\" *ngIf=\\\"searchType\\\">\\r\\n      <input type=\\\"text\\\" #userName>\\r\\n      <button (click)=\\\"getData(userName.value)\\\">Search</button>\\r\\n      <span class=\\\"is-danger\\\" *ngIf=\\\"errorMsg\\\">{{errorMsg}}</span>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"search-box\\\" *ngIf=\\\"!searchType\\\">\\r\\n      <input type=\\\"text\\\" #searchWord>\\r\\n      <button (click)=\\\"getData(searchWord.value)\\\">Search</button>\\r\\n      <span class=\\\"is-danger\\\" *ngIf=\\\"errorMsg\\\">{{errorMsg}}</span>\\r\\n      <div class=\\\"sorting-checkbox\\\">\\r\\n          <label class=\\\"chearch-type\\\">\\r\\n            <input type=\\\"radio\\\" checked=\\\"checked\\\" name=\\\"sort\\\" #bestMatch value=\\\"\\\" (click)=\\\"setSortType('')\\\"> Best match\\r\\n          </label>\\r\\n          <label class=\\\"chearch-type\\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"sort\\\" #stars value=\\\"&sort=stars\\\" (click)=\\\"setSortType('&sort=stars')\\\"> Sort by stars\\r\\n          </label>\\r\\n          <label class=\\\"chearch-type\\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"sort\\\" #update value=\\\"&sort=updated\\\" (click)=\\\"setSortType('&sort=updated')\\\"> Sort by updated\\r\\n          </label>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- FOUND REPOS CARDS -->\\r\\n  <div class=\\\"cards\\\">\\r\\n    <div class=\\\"card\\\" *ngFor=\\\"let rep of reposFound\\\">\\r\\n      <img src=\\\"{{rep.owner.avatar_url}}\\\" alt=\\\"\\\">\\r\\n      <h3>Owner: {{rep.owner.login}}</h3>\\r\\n      <h4 class=\\\"linkToClick\\\" (click)=\\\"getSingleRep('repos/' + rep.owner.login + '/' + rep.name)\\\">Repository found: {{rep.name}}</h4>\\r\\n      <span class=\\\"spacer\\\"></span>\\r\\n      <p class=\\\"linkToClick\\\" (click)=\\\"getRepos('users/' + rep.owner.login + '/repos')\\\">See all repositories <i class=\\\"fas fa-code-branch\\\"></i></p>\\r\\n      <p><a href=\\\"{{rep.owner.html_url}}\\\" target=\\\"_blank\\\">See user's Github page</a></p>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- SINGLE USER CARD -->\\r\\n  <div class=\\\"card\\\" *ngIf=\\\"singleUser\\\">\\r\\n    <img src=\\\"{{singleUser.avatar_url}}\\\" alt=\\\"\\\">\\r\\n    <h3>{{singleUser.login}}</h3>\\r\\n    <p>Repositories: {{singleUser.public_repos}}</p>\\r\\n    <p class=\\\"linkToClick\\\" (click)=\\\"getRepos('users/' + singleUser.login + '/repos')\\\">See repositories <i class=\\\"fas fa-code-branch\\\"></i></p>\\r\\n    <span class=\\\"spacer\\\"></span>\\r\\n    <p><a href=\\\"{{singleUser.html_url}}\\\" target=\\\"_blank\\\">See user's Github page</a></p>\\r\\n  </div>\\r\\n\\r\\n  <!-- MODAL SINGLE REPOSITORY -->\\r\\n  <div class=\\\"modal\\\" #modalWindow *ngIf=\\\"singleRepository\\\" (click)=\\\"closeModal(modalWindow)\\\">\\r\\n    <div class=\\\"card modal-content\\\">\\r\\n      <h3>{{singleRepository.name}}</h3>\\r\\n      <p>Description: {{singleRepository.description}}</p>\\r\\n      <p>Language: {{singleRepository.language}}</p>\\r\\n      <p>Created at: {{singleRepository.created_at}}</p>\\r\\n      <p>Pushed at: {{singleRepository.pushed_at}}</p>\\r\\n      <p>Updated at: {{singleRepository.updated_at}}</p>\\r\\n      <span class=\\\"spacer\\\"></span>\\r\\n      <p><a href=\\\"{{singleRepository.html_url}}\\\" target=\\\"_blank\\\">See at Github...</a></p>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- MODAL REPOSITORIES -->\\r\\n  <div class=\\\"modal\\\" #modalWindow *ngIf=\\\"repositories\\\" (click)=\\\"closeModal(modalWindow)\\\">\\r\\n    <div class=\\\"card modal-content\\\">\\r\\n      <h3>Repositories list</h3>\\r\\n      <p *ngFor=\\\"let rep of repositories\\\">\\r\\n        <a href=\\\"{{rep.html_url}}\\\" target=\\\"_blank\\\">{{rep.name}}</a>\\r\\n      </p>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \".search {\\n  width: 100%;\\n  padding: 1rem; }\\n\\n.checkbox-container {\\n  margin-bottom: 1rem; }\\n\\n.chearch-type {\\n  margin-right: 1rem; }\\n\\n.search-box * {\\n  margin-right: .5rem;\\n  margin-bottom: .5rem; }\\n\\n.cards {\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: center; }\\n\\n.card {\\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.36);\\n  height: 25rem;\\n  width: 16rem;\\n  margin: 1rem;\\n  display: flex;\\n  flex-direction: column; }\\n\\n.card img {\\n    width: 100%; }\\n\\n.card h3 {\\n    margin: .5rem auto;\\n    text-align: center; }\\n\\n.card h4 {\\n    margin: 0 .5rem .5rem .5rem;\\n    overflow: hidden;\\n    width: unset; }\\n\\n.card p {\\n    margin: 0 .5rem .5rem .5rem; }\\n\\n.card:hover {\\n  box-shadow: 0 2px 3px 0 rgba(0, 0, 0, 0.26); }\\n\\n.modal {\\n  position: fixed;\\n  width: 100%;\\n  height: 100%;\\n  left: 0;\\n  top: 0;\\n  background-color: rgba(0, 0, 0, 0.26);\\n  display: flex;\\n  justify-content: center;\\n  align-items: center; }\\n\\n.modal .modal-content {\\n    background-color: white;\\n    overflow: auto;\\n    padding: .5rem;\\n    width: 25rem; }\\n\\n@media only screen and (max-width: 576px) {\\n  .container {\\n    display: flex;\\n    align-items: center;\\n    flex-direction: column; }\\n  .search {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center; }\\n  .search-box {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center; }\\n  .search-box * {\\n    margin-right: 0; }\\n  .chearch-type {\\n    display: block; }\\n  .card {\\n    height: 30rem;\\n    width: 20rem; } }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../core/data.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  reposFound: any;\r\n  singleUser: any;\r\n  singleRepository: any;\r\n  repositories: any;\r\n\r\n  searchType = true;\r\n\r\n  searchCriteria = '';\r\n\r\n  errorMsg: string;\r\n\r\n  constructor(\r\n    private _dS: DataService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  switchToUserSearch() {\r\n    this.searchType = true;\r\n  }\r\n\r\n  switchToRepoSearch() {\r\n    this.searchType = false;\r\n  }\r\n\r\n  setSortType(type) {\r\n    this.searchCriteria = type;\r\n  }\r\n\r\n  // Get data from github main function (single user data or searched repos)\r\n  getData(arg) {\r\n    if (this.searchType && arg.length > 2) {\r\n      this._dS.getData(`users/${arg}`).subscribe(data => {\r\n        this.singleUser = data;\r\n        this.reposFound = null;\r\n        this.errorMsg = '';\r\n      }, error => {\r\n        this.errorMsg = `'${arg}' was not found`;\r\n        console.log(error.message);\r\n      });\r\n    } else if (!this.searchType && arg.length > 2) {\r\n      this._dS.getData(`search/repositories?q=${arg}${this.searchCriteria}`).subscribe(data => {\r\n        this.reposFound = data['items'];\r\n        this.singleUser = null;\r\n        this.errorMsg = '';\r\n      }, error => {\r\n        this.errorMsg = `'${arg}' was not found`;\r\n        console.log(error.message);\r\n      });\r\n    } else {\r\n      this.errorMsg = 'Minimum 3 letters';\r\n    }\r\n  }\r\n\r\n  // Get user's repositories list\r\n  getRepos(url) {\r\n    this._dS.getData(url).subscribe(data => {\r\n      this.repositories = data;\r\n    }, error => {\r\n      console.log(error.message);\r\n    });\r\n  }\r\n\r\n  // Get single repository's data\r\n  getSingleRep(url) {\r\n    this._dS.getData(url).subscribe(data => {\r\n      this.singleRepository = data;\r\n    }, error => {\r\n      console.log(error.message);\r\n    });\r\n  }\r\n\r\n  closeModal(modalWindow) {\r\n    if (event.target === modalWindow) {\r\n      this.repositories = null;\r\n      this.singleRepository = null;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <a class=\\\"linkBack\\\" routerLink=\\\"/\\\">\\r\\n    <i class=\\\"fas fa-arrow-left\\\"></i>\\r\\n  </a>\\r\\n  <div class=\\\"container-howTo\\\">\\r\\n    <h1>How to use</h1>\\r\\n    <ul>\\r\\n      <li>\\r\\n        <i>\\\"Search for repositories\\\"</i> - type keywords, what repositories are you looking for (minimum 3 letters) and choose sorting type\\r\\n      </li>\\r\\n      <li>\\r\\n        <i>\\\"Get user information\\\"</i> - if you know the full nickname of the user, use this option and type full user nickname to the input (minimum 3 letters)\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".linkBack {\\n  color: black; }\\n\\n.container-howTo {\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center; }\\n\\n.container-howTo h1 {\\n    margin: 1rem auto; }\\n\\n.container-howTo ul {\\n    max-width: 90%;\\n    margin: 1rem auto; }\\n\\n.container-howTo ul li {\\n      margin-bottom: .5rem; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-how-to',\n  templateUrl: './how-to.component.html',\n  styleUrls: ['./how-to.component.scss']\n})\nexport class HowToComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<nav>\\n  <a routerLink=\\\"/\\\">\\n    <img class=\\\"logo\\\" src=\\\"../../assets/octocat.png\\\" alt=\\\"Logo\\\">\\n  </a>\\n  <span class=\\\"spacer\\\"></span>\\n  <a routerLink=\\\"/how-to\\\" class=\\\"navLink\\\">how to use</a>\\n</nav>\\n\"","module.exports = \"nav {\\n  width: 100%;\\n  background-color: #b0f5f5;\\n  padding: 0.75rem 1.5rem;\\n  display: flex;\\n  align-items: center;\\n  height: 5rem; }\\n  nav .logo {\\n    width: 3.5rem; }\\n  nav .navLink {\\n    text-decoration: none;\\n    text-transform: uppercase;\\n    color: black;\\n    padding-left: 1.5rem; }\\n  nav .navLink:hover {\\n    font-size: 1.1rem;\\n    text-decoration: underline; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}