{"version":3,"sources":["components/UI/Spinner/Spinner.module.css","components/Station/Station.module.css","components/Navigation/Navbar/Navbar.module.css","components/Station/Station.js","components/Navigation/Navbar/Navbar.js","components/UI/Spinner/Spinner.js","containers/Homepage/Homepage.js","App.js","reportWebVitals.js","index.js","containers/Homepage/Homepage.module.css"],"names":["module","exports","Station","props","googleMapLink","lat","lon","className","styles","selected","Station_Selected","join","onClick","select","Station_Name","name","Station_Info","Station_Info_Fade","address","availBike","availDock","Map_Link","href","target","rel","Navbar","Navbar_Item","Navbar_Logo","Navbar_Item_Login","Spinner","Homepage","state","stations","loading","error","stationsLoaded","selectStationHandler","i","map","s","station","setState","loadMoreStationsHandler","loaded","axios","post","query","then","res","data","filter","catch","err","this","style","textAlign","color","length","slice","loadBtnStyle","display","Header","Stations_List","Load_More","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff28bd76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__uy_b_\",\"load6\":\"Spinner_load6__3unga\",\"round\":\"Spinner_round__3K6zz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Station\":\"Station_Station__2_EUB\",\"Station_Selected\":\"Station_Station_Selected__sdXxx\",\"Map_Link\":\"Station_Map_Link__Hhqm-\",\"Station_Name\":\"Station_Station_Name__lHxww\",\"Station_Info\":\"Station_Station_Info__3bGYM\",\"Station_Info_Fade\":\"Station_Station_Info_Fade__UgHxI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__38HaA\",\"Navbar_Logo\":\"Navbar_Navbar_Logo__9FBeL\",\"Navbar_Item\":\"Navbar_Navbar_Item__1J8SN\",\"Navbar_Item_Login\":\"Navbar_Navbar_Item_Login__3QZkr\"};","import React from 'react';\r\n\r\nimport styles from './Station.module.css';\r\n\r\nconst Station = (props) => {\r\n\r\n    const googleMapLink = `http://www.google.com/maps/place/${props.lat},${props.lon}`\r\n\r\n    return (\r\n        <div className={[styles.Station, props.selected ? styles.Station_Selected : null].join(' ')} onClick={props.select}>\r\n            <h4 className={props.selected ? styles.Station_Name : null}>Station: {props.name}</h4>\r\n            <div className={['spacer', styles.Station_Info, props.selected ? null : styles.Station_Info_Fade].join(' ')}>\r\n                <p>Address: {props.address}</p>\r\n                <p>Available bikes: {props.availBike}</p>\r\n                <p>Available docks: {props.availDock}</p>\r\n                <a className={styles.Map_Link} href={googleMapLink} target=\"_blank\" rel=\"noreferrer\">Show on map</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Station;","import React from 'react';\r\n\r\nimport styles from './Navbar.module.css';\r\n\r\nconst Navbar = (props) => (\r\n    <ul className={styles.Navbar}>\r\n        <li className={[styles.Navbar_Item, styles.Navbar_Logo].join(' ')}></li>\r\n        <li className=\"spacer\"></li>\r\n        <li className={styles.Navbar_Item}>About</li>\r\n        <li className={[styles.Navbar_Item, styles.Navbar_Item_Login].join(' ')}>Login</li>\r\n    </ul>\r\n)\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport styles from './Spinner.module.css'\r\n\r\nconst Spinner = () => (\r\n    <div className={styles.Spinner}>Loading...</div>\r\n);\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport styles from './Homepage.module.css';\r\nimport Station from '../../components/Station/Station';\r\nimport Navbar from '../../components/Navigation/Navbar/Navbar';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Homepage extends Component {\r\n\r\n    state = {\r\n        stations: [],\r\n        loading: true,\r\n        error: false,\r\n        stationsLoaded: 20\r\n    }\r\n\r\n    componentDidMount() {\r\n        const body = {\r\n            query: `{\r\n                stations {\r\n                    station_id\r\n                    name\r\n                    address\r\n                    lat\r\n                    lon\r\n                    availability {\r\n                        num_bikes_available\r\n                        num_docks_available\r\n                    }\r\n                }\r\n            }`\r\n        } \r\n        axios.post('https://gbfs-graphql.vercel.app/api/graphql', body)\r\n            .then(res => {\r\n                const stations = res.data.data.stations\r\n                    .filter(station => {\r\n                        if (station['availability']['num_bikes_available'] && station['availability']['num_docks_available']) {\r\n                            station.selected = false;\r\n                            return true;\r\n                        }\r\n                        return false;\r\n                    });\r\n                this.setState({stations: stations})\r\n            })\r\n            .catch(err => this.setState({error: true}))\r\n    }\r\n\r\n    selectStationHandler = (i) => {\r\n        if (this.state.stations[i].selected) {\r\n            return;\r\n        }\r\n        const stations = this.state.stations.map(s => {\r\n            const station = {...s}\r\n            station.selected = false;\r\n            return station;\r\n        });\r\n        stations[i].selected = true;\r\n        this.setState({ stations: stations });\r\n    }\r\n\r\n    loadMoreStationsHandler = () => {\r\n        const loaded = this.state.stationsLoaded;\r\n        this.setState({stationsLoaded: loaded + 20});\r\n    }\r\n\r\n    render() {\r\n        let stations = <Spinner />;\r\n        \r\n        if (this.state.error) {\r\n            stations = <h3 style={{textAlign: 'center', color: 'red'}}>Something went wrong!</h3>;\r\n        }\r\n\r\n        if (!this.state.error && this.state.stations.length) {\r\n            stations = this.state.stations.slice(0, this.state.stationsLoaded)\r\n                .map((station, i) => {\r\n                    return <Station \r\n                                key={station['station_id']}\r\n                                name={station['name']}\r\n                                address={station['address']}\r\n                                lat={station['lat']}\r\n                                lon={station['lon']}\r\n                                availBike={station['availability']['num_bikes_available']}\r\n                                availDock={station['availability']['num_docks_available']}\r\n                                selected={station.selected}\r\n                                select={() => this.selectStationHandler(i)} />\r\n                });\r\n        }\r\n\r\n        let loadBtnStyle = null;\r\n        if (this.state.stationsLoaded >= this.state.stations.length) {\r\n            loadBtnStyle = {display: 'none'}\r\n        }\r\n        \r\n        return (\r\n            <div className={styles.Homepage}>\r\n                <Navbar />\r\n                <h1 className={styles.Header}>Available bikes at:</h1>\r\n                <main>\r\n                    <div className={styles.Stations_List}>\r\n                        {stations}\r\n                        <div className={styles.Load_More} style={loadBtnStyle} onClick={() => this.loadMoreStationsHandler()}>\r\n                            <p>Load more</p>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Homepage;","import React from 'react';\n\nimport './App.css';\nimport Homepage from './containers/Homepage/Homepage';\n\nconst App = () => {\n\n  return (\n      <div className=\"App\">\n        <Homepage />\n      </div>\n    );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Homepage\":\"Homepage_Homepage__1nXKT\",\"Header\":\"Homepage_Header__3uTps\",\"Stations_List\":\"Homepage_Stations_List__11lfR\",\"Load_More\":\"Homepage_Load_More__1EVBZ\"};"],"sourceRoot":""}