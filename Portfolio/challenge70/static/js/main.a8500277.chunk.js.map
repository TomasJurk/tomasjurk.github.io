{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","walks","setWalks","useEffect","fetch","method","headers","body","JSON","stringify","client_id","client_secret","refresh_token","grant_type","then","response","json","data","access_token","activities_link","filteredWalks","filter","walk","type","walkDate","Date","start_date","getDate","getMonth","getWalks","walkedTotal","reduce","a","b","distance","walksToDisplay","weekday","date","map","challengeDay","totalDayDistance","slice","toFixed","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMA0FeA,EAvFH,WAEV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAqBAC,qBAAU,WACRC,MAAM,qCAAsC,CAC1CC,OAAQ,OACRC,QAAS,CACL,OAAU,oCACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACnBC,UAAW,QACXC,cAAe,2CACfC,cAAe,2CACfC,WAAY,oBAMfC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,IArCS,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACXC,EAAe,wEAAoED,GACzFd,MAAMe,GACDL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,IAAMG,EAAgBH,EAAKI,QAAO,SAAAC,GAChC,MAAqB,SAAdA,EAAKC,QAEbF,QAAO,SAAAC,GACN,IAAME,EAAW,IAAIC,KAAKH,EAAKI,YAC/B,OAAIF,EAASG,WAAa,GAAKH,EAASG,WAAa,IAA8B,IAAxBH,EAASI,cAKtE1B,EAASkB,MAuBbS,CAASZ,QAEV,IAEH,IAAMa,EAAc7B,EAAM8B,QAAO,SAACC,EAAGC,GACnC,OAAOD,EAAIC,EAAEC,WACZ,GAYGC,EAVgB,CACpB,CAACC,QAAS,MAAOC,KAAM,GACvB,CAACD,QAAS,MAAOC,KAAM,GACvB,CAACD,QAAS,MAAOC,KAAM,GACvB,CAACD,QAAS,MAAOC,KAAM,GACvB,CAACD,QAAS,MAAOC,KAAM,IACvB,CAACD,QAAS,MAAOC,KAAM,IACvB,CAACD,QAAS,MAAOC,KAAM,KAGYC,KAAI,SAAAC,GACvC,IAAMC,EAAmBvC,EAAM8B,QAAO,SAACC,EAAGC,GAExC,OADiB,IAAIR,KAAKQ,EAAEP,YAAYC,YACvBY,EAAaF,KACrBL,EAAIC,EAAEC,SAERF,EAAI,IACV,GACH,OACE,+BACE,iCAAOO,EAAaH,QAApB,KAA+B,IAAMG,EAAaF,MAAMI,OAAO,GAA/D,OACA,8BAAID,EAAmB,GAAKA,EAAmB,KAAME,QAAQ,GAAK,OAAlE,eAKN,OACE,sBAAKC,UAAU,MAAf,UACE,gEACA,6BACGR,IAEH,+CAAkB,GAAKL,EAAc,KAAMY,QAAQ,GAAnD,YCzESE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.a8500277.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n\n  const [walks, setWalks] = useState([]);\n\n  const getWalks = ({access_token}) => {\n    const activities_link = `https://www.strava.com/api/v3/athlete/activities?access_token=${access_token}`\n    fetch(activities_link)\n        .then(response => response.json())\n        .then(data => {\n          const filteredWalks = data.filter(walk => {\n            return walk.type === 'Walk'\n          })\n          .filter(walk => {\n            const walkDate = new Date(walk.start_date);\n            if (walkDate.getDate() >= 6 && walkDate.getDate() <= 12 && walkDate.getMonth() === 6) {\n              return true;\n            }\n            return false;\n          })\n          setWalks(filteredWalks);\n        });\n  }\n\n  useEffect(() => {\n    fetch('https://www.strava.com/oauth/token', {\n      method: 'POST',\n      headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        client_id: '68150',\n        client_secret: '409d4f9261a2a0ab5410113d98ab6abe682cba00',\n        refresh_token: '2d209a528d63f336d2205629b0d4f152c766d6bc',\n        grant_type: 'refresh_token'\n        // below code to get activities:read_all\n        // code: '8a59707fb0c605e201375e2ba63da0bcb6fa0329',\n        // grant_type: 'authorization_code'\n    })\n    })\n    .then(response => response.json())\n    .then(data => {\n      getWalks(data);\n    })\n  }, []);\n\n  const walkedTotal = walks.reduce((a, b) => {\n    return a + b.distance;\n  }, 0);\n\n  const challengeDays = [\n    {weekday: 'Tue', date: 6}, \n    {weekday: 'Wed', date: 7}, \n    {weekday: 'Thu', date: 8}, \n    {weekday: 'Fri', date: 9}, \n    {weekday: 'Sat', date: 10}, \n    {weekday: 'Sun', date: 11}, \n    {weekday: 'Mon', date: 12}\n  ];\n  \n  const walksToDisplay = challengeDays.map(challengeDay => {\n    const totalDayDistance = walks.reduce((a, b) => {\n      const walkDate = new Date(b.start_date).getDate();\n      if (walkDate === challengeDay.date) {\n        return a + b.distance;\n      }\n      return a + 0;\n    }, 0)\n    return (\n      <li>\n        <span>{challengeDay.weekday} {('0' + challengeDay.date).slice(-2)}:</span> \n        <b>{totalDayDistance > 0 ? (totalDayDistance / 1000).toFixed(1) : '----'} km</b>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"App\">\n      <h2>70km walking per week progress</h2>\n      <ul>\n        {walksToDisplay}\n      </ul>\n      <h3>Left to go: {(70 - walkedTotal / 1000).toFixed(1)}km</h3>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}